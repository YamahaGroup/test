const cds = require('../../../')
const { UPDATE, DELETE } = cds.ql

const { odataError, getKeysFromPath } = require('../utils')

module.exports = srv =>
  function deleete(req, res, next) {
    if (req._preferReturn) {
      const message = `The 'return' preference is not allowed in ${req.method} requests`
      return res.status(400).json({ error: { code: '400', message } })
    }

    const { _query: query } = req

    const {
      SELECT: { one, from }
    } = query

    if (!one) {
      // REVISIT: don't use "ENTITY.COLLECTION" as that's an okra term
      return res.status(405).json(odataError('405', `Method DELETE not allowed for ENTITY.COLLECTION`))
    }

    // for read and delete, we provide keys in req.data
    const data = getKeysFromPath(query.SELECT.from, srv)

    // REVISIT: better
    if (query._propertyAccess) data[query._propertyAccess] = null

    // REVISIT: maybe also just dispatch a cds request here?
    return srv
      .run(query._propertyAccess ? UPDATE(from).set({ [query._propertyAccess]: null }) : DELETE.from(from), data)
      .then(result => {
        if (result === 0) return res.status(404).json({ error: { code: '404', message: 'Not Found' } })
        res.sendStatus(204)
      })
      .catch(next)
  }
